# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.24)
{
  # A helpful description of your flake
  description = "Jupyter Notebook";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";

    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/*";
  };

  # Flake outputs that other flakes can use
  outputs = { self, flake-schemas, nixpkgs }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ "x86_64-linux" "aarch64-darwin" "x86_64-darwin" "aarch64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });
    in
    {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      # Development environments
      devShells = forEachSupportedSystem ({ pkgs }:
        let
          pythonWithPackages = pkgs.python3.withPackages (ps: with ps; [
            jupyter
            notebook
            ipykernel
            numpy
            pandas
            matplotlib
            scipy
            # Add more Python packages as needed
          ]);
        in
        {
          default = pkgs.mkShell {
            # Pinned packages available in the environment
            packages = with pkgs; [
              git
              nixpkgs-fmt
              pythonWithPackages
            ];
            shellHook = ''
              echo "Jupyter development environment activated!"
              echo "Run 'jupyter notebook' to start the notebook server"
              echo "Or 'jupyter console' to start a console."
            '';
          };
        });
    };
}
